
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Fri Mar 27 01:50:38 CST 2020
//----------------------------------------------------

package gramaticas4;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import Pollitos.ArchivoConfiguracion;
import Pollitos.Mapa;
import Pollitos.Planetas;
import Pollitos.PlanetasNeutrales;
import Pollitos.Jugadores;
import Pollitos.MapaPNeutrales;
import Pollitos.Juego;
import Pollitos.Impactos;
import Pollitos.DatosImpacto;
import Pollitos.NavesCamino;
import Pollitos.Replay;
import Pollitos.ResumenTurno;
import Pollitos.DatosAcciones;
import mapa.CreacionMapa;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JTextArea;
import javax.swing.JButton;
import javax.swing.JPanel;
import interfaz.VentanaPrincipal;
import Pollitos.Turnos;
import Pollitos.AccionesOnline;
import java.util.ArrayList;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Fri Mar 27 01:50:38 CST 2020
  */
public class SintaxOnline extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public SintaxOnline() {super();}

  /** Constructor which sets the default scanner. */
  public SintaxOnline(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public SintaxOnline(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\077\000\002\002\004\000\002\002\003\000\002\003" +
    "\006\000\002\046\004\000\002\046\004\000\002\046\004" +
    "\000\002\046\004\000\002\046\002\000\002\047\004\000" +
    "\002\047\004\000\002\047\004\000\002\021\006\000\002" +
    "\021\005\000\002\020\010\000\002\020\007\000\002\017" +
    "\007\000\002\017\006\000\002\004\004\000\002\004\004" +
    "\000\002\004\004\000\002\004\004\000\002\004\004\000" +
    "\002\004\004\000\002\004\004\000\002\004\004\000\002" +
    "\004\004\000\002\004\004\000\002\004\002\000\002\005" +
    "\004\000\002\005\004\000\002\005\004\000\002\005\004" +
    "\000\002\005\004\000\002\005\004\000\002\005\004\000" +
    "\002\005\004\000\002\005\004\000\002\006\005\000\002" +
    "\007\005\000\002\010\005\000\002\011\005\000\002\012" +
    "\005\000\002\013\005\000\002\014\005\000\002\015\005" +
    "\000\002\016\005\000\002\016\005\000\002\030\006\000" +
    "\002\031\004\000\002\031\004\000\002\031\002\000\002" +
    "\032\004\000\002\027\006\000\002\027\006\000\002\022" +
    "\006\000\002\023\004\000\002\023\004\000\002\023\004" +
    "\000\002\023\002\000\002\026\004\000\002\026\004\000" +
    "\002\024\005\000\002\025\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\213\000\004\056\005\001\002\000\004\002\000\001" +
    "\002\000\004\006\010\001\002\000\004\002\007\001\002" +
    "\000\004\002\001\001\002\000\014\007\ufffa\013\011\060" +
    "\017\101\013\107\016\001\002\000\010\060\017\101\013" +
    "\107\016\001\002\000\004\007\206\001\002\000\004\006" +
    "\170\001\002\000\014\007\ufffa\013\011\060\017\101\013" +
    "\107\016\001\002\000\014\007\ufffa\013\011\060\017\101" +
    "\013\107\016\001\002\000\004\006\143\001\002\000\004" +
    "\006\022\001\002\000\014\007\ufffa\013\011\060\017\101" +
    "\013\107\016\001\002\000\004\007\ufffe\001\002\000\006" +
    "\007\025\047\023\001\002\000\004\012\027\001\002\000" +
    "\004\007\026\001\002\000\014\007\ufff5\013\ufff5\060\ufff5" +
    "\101\ufff5\107\ufff5\001\002\000\014\007\ufff6\013\ufff6\060" +
    "\ufff6\101\ufff6\107\ufff6\001\002\000\004\010\030\001\002" +
    "\000\004\061\032\001\002\000\004\011\141\001\002\000" +
    "\004\010\033\001\002\000\030\011\uffe6\013\045\035\043" +
    "\062\056\063\050\064\055\065\036\066\057\070\035\071" +
    "\054\077\034\001\002\000\004\012\137\001\002\000\004" +
    "\012\135\001\002\000\004\012\133\001\002\000\030\011" +
    "\uffe6\013\045\035\043\062\056\063\050\064\055\065\036" +
    "\066\057\070\035\071\054\077\034\001\002\000\030\011" +
    "\uffe6\013\045\035\043\062\056\063\050\064\055\065\036" +
    "\066\057\070\035\071\054\077\034\001\002\000\030\011" +
    "\uffe6\013\045\035\043\062\056\063\050\064\055\065\036" +
    "\066\057\070\035\071\054\077\034\001\002\000\030\011" +
    "\uffe6\013\045\035\043\062\056\063\050\064\055\065\036" +
    "\066\057\070\035\071\054\077\034\001\002\000\004\012" +
    "\125\001\002\000\030\011\uffe6\013\045\035\043\062\056" +
    "\063\050\064\055\065\036\066\057\070\035\071\054\077" +
    "\034\001\002\000\024\035\043\062\056\063\050\064\055" +
    "\065\036\066\057\070\035\071\054\077\034\001\002\000" +
    "\030\011\uffe6\013\045\035\043\062\056\063\050\064\055" +
    "\065\036\066\057\070\035\071\054\077\034\001\002\000" +
    "\030\011\uffe6\013\045\035\043\062\056\063\050\064\055" +
    "\065\036\066\057\070\035\071\054\077\034\001\002\000" +
    "\004\012\075\001\002\000\030\011\uffe6\013\045\035\043" +
    "\062\056\063\050\064\055\065\036\066\057\070\035\071" +
    "\054\077\034\001\002\000\030\011\uffe6\013\045\035\043" +
    "\062\056\063\050\064\055\065\036\066\057\070\035\071" +
    "\054\077\034\001\002\000\004\011\071\001\002\000\004" +
    "\012\066\001\002\000\004\012\064\001\002\000\004\012" +
    "\062\001\002\000\004\012\060\001\002\000\004\045\061" +
    "\001\002\000\030\011\uffd7\013\uffd7\035\uffd7\062\uffd7\063" +
    "\uffd7\064\uffd7\065\uffd7\066\uffd7\070\uffd7\071\uffd7\077\uffd7" +
    "\001\002\000\004\047\063\001\002\000\030\011\uffdb\013" +
    "\uffdb\035\uffdb\062\uffdb\063\uffdb\064\uffdb\065\uffdb\066\uffdb" +
    "\070\uffdb\071\uffdb\077\uffdb\001\002\000\004\045\065\001" +
    "\002\000\030\011\uffd9\013\uffd9\035\uffd9\062\uffd9\063\uffd9" +
    "\064\uffd9\065\uffd9\066\uffd9\070\uffd9\071\uffd9\077\uffd9\001" +
    "\002\000\006\004\070\005\067\001\002\000\030\011\uffd3" +
    "\013\uffd3\035\uffd3\062\uffd3\063\uffd3\064\uffd3\065\uffd3\066" +
    "\uffd3\070\uffd3\071\uffd3\077\uffd3\001\002\000\030\011\uffd4" +
    "\013\uffd4\035\uffd4\062\uffd4\063\uffd4\064\uffd4\065\uffd4\066" +
    "\uffd4\070\uffd4\071\uffd4\077\uffd4\001\002\000\006\011\ufff1" +
    "\061\032\001\002\000\004\011\ufff2\001\002\000\004\011" +
    "\ufff0\001\002\000\004\011\uffef\001\002\000\004\047\076" +
    "\001\002\000\030\011\uffda\013\uffda\035\uffda\062\uffda\063" +
    "\uffda\064\uffda\065\uffda\066\uffda\070\uffda\071\uffda\077\uffda" +
    "\001\002\000\004\011\uffee\001\002\000\004\011\uffed\001" +
    "\002\000\004\011\uffe7\001\002\000\030\011\uffe6\013\045" +
    "\035\043\062\056\063\050\064\055\065\036\066\057\070" +
    "\035\071\054\077\034\001\002\000\030\011\uffe6\013\045" +
    "\035\043\062\056\063\050\064\055\065\036\066\057\070" +
    "\035\071\054\077\034\001\002\000\030\011\uffe6\013\045" +
    "\035\043\062\056\063\050\064\055\065\036\066\057\070" +
    "\035\071\054\077\034\001\002\000\030\011\uffe6\013\045" +
    "\035\043\062\056\063\050\064\055\065\036\066\057\070" +
    "\035\071\054\077\034\001\002\000\030\011\uffe6\013\045" +
    "\035\043\062\056\063\050\064\055\065\036\066\057\070" +
    "\035\071\054\077\034\001\002\000\030\011\uffe6\013\045" +
    "\035\043\062\056\063\050\064\055\065\036\066\057\070" +
    "\035\071\054\077\034\001\002\000\030\011\uffe6\013\045" +
    "\035\043\062\056\063\050\064\055\065\036\066\057\070" +
    "\035\071\054\077\034\001\002\000\030\011\uffe6\013\045" +
    "\035\043\062\056\063\050\064\055\065\036\066\057\070" +
    "\035\071\054\077\034\001\002\000\030\011\uffe6\013\045" +
    "\035\043\062\056\063\050\064\055\065\036\066\057\070" +
    "\035\071\054\077\034\001\002\000\004\011\uffe5\001\002" +
    "\000\004\011\uffe4\001\002\000\004\011\uffe3\001\002\000" +
    "\004\011\uffe2\001\002\000\004\011\uffe1\001\002\000\004" +
    "\011\uffe0\001\002\000\004\011\uffdf\001\002\000\004\011" +
    "\uffde\001\002\000\004\011\uffdd\001\002\000\004\011\uffec" +
    "\001\002\000\004\046\126\001\002\000\030\011\uffd6\013" +
    "\uffd6\035\uffd6\062\uffd6\063\uffd6\064\uffd6\065\uffd6\066\uffd6" +
    "\070\uffd6\071\uffd6\077\uffd6\001\002\000\004\011\uffeb\001" +
    "\002\000\004\011\uffea\001\002\000\004\011\uffe9\001\002" +
    "\000\004\011\uffe8\001\002\000\004\045\134\001\002\000" +
    "\030\011\uffd8\013\uffd8\035\uffd8\062\uffd8\063\uffd8\064\uffd8" +
    "\065\uffd8\066\uffd8\070\uffd8\071\uffd8\077\uffd8\001\002\000" +
    "\004\045\136\001\002\000\030\011\uffd5\013\uffd5\035\uffd5" +
    "\062\uffd5\063\uffd5\064\uffd5\065\uffd5\066\uffd5\070\uffd5\071" +
    "\uffd5\077\uffd5\001\002\000\004\045\140\001\002\000\030" +
    "\011\uffdc\013\uffdc\035\uffdc\062\uffdc\063\uffdc\064\uffdc\065" +
    "\uffdc\066\uffdc\070\uffdc\071\uffdc\077\uffdc\001\002\000\006" +
    "\007\ufff3\047\023\001\002\000\004\007\ufff4\001\002\000" +
    "\012\007\uffc7\013\144\106\146\110\147\001\002\000\006" +
    "\106\146\110\147\001\002\000\004\007\160\001\002\000" +
    "\004\012\156\001\002\000\004\012\154\001\002\000\012" +
    "\007\uffc7\013\144\106\146\110\147\001\002\000\012\007" +
    "\uffc7\013\144\106\146\110\147\001\002\000\004\007\uffca" +
    "\001\002\000\004\007\uffc9\001\002\000\004\045\155\001" +
    "\002\000\012\007\uffc3\013\uffc3\106\uffc3\110\uffc3\001\002" +
    "\000\004\045\157\001\002\000\012\007\uffc4\013\uffc4\106" +
    "\uffc4\110\uffc4\001\002\000\014\007\uffcb\013\uffcb\060\uffcb" +
    "\101\uffcb\107\uffcb\001\002\000\004\007\uffc8\001\002\000" +
    "\012\007\uffc7\013\144\106\146\110\147\001\002\000\012" +
    "\007\uffc7\013\144\106\146\110\147\001\002\000\004\007" +
    "\uffc6\001\002\000\004\007\uffc5\001\002\000\004\007\ufffd" +
    "\001\002\000\004\007\ufffc\001\002\000\010\007\uffcf\013" +
    "\171\074\174\001\002\000\004\074\174\001\002\000\010" +
    "\007\uffcf\013\171\074\174\001\002\000\004\007\201\001" +
    "\002\000\004\047\175\001\002\000\004\012\176\001\002" +
    "\000\006\004\200\005\177\001\002\000\010\007\uffcc\013" +
    "\uffcc\074\uffcc\001\002\000\010\007\uffcd\013\uffcd\074\uffcd" +
    "\001\002\000\014\007\uffd2\013\uffd2\060\uffd2\101\uffd2\107" +
    "\uffd2\001\002\000\004\007\uffd1\001\002\000\004\007\uffd0" +
    "\001\002\000\010\007\uffcf\013\171\074\174\001\002\000" +
    "\004\007\uffce\001\002\000\004\002\uffff\001\002\000\004" +
    "\007\ufffb\001\002\000\014\007\ufffa\013\011\060\017\101" +
    "\013\107\016\001\002\000\014\007\ufffa\013\011\060\017" +
    "\101\013\107\016\001\002\000\014\007\ufffa\013\011\060" +
    "\017\101\013\107\016\001\002\000\004\007\ufff9\001\002" +
    "\000\004\007\ufff8\001\002\000\004\007\ufff7\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\213\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\021\017\022\013\030\014\046\011\001\001\000" +
    "\012\021\211\022\207\030\210\047\206\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\021\017\022\013\030" +
    "\014\046\166\001\001\000\012\021\017\022\013\030\014" +
    "\046\165\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\021\017\022\013\030\014\046\020\001\001\000\002" +
    "\001\001\000\004\020\023\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\017\030\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\052\006\051\007\050\010\046" +
    "\011\045\012\043\013\041\014\040\015\037\016\036\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\004\131\006\051\007\050\010\046\011\045\012" +
    "\043\013\041\014\040\015\037\016\036\001\001\000\026" +
    "\004\130\006\051\007\050\010\046\011\045\012\043\013" +
    "\041\014\040\015\037\016\036\001\001\000\026\004\127" +
    "\006\051\007\050\010\046\011\045\012\043\013\041\014" +
    "\040\015\037\016\036\001\001\000\026\004\126\006\051" +
    "\007\050\010\046\011\045\012\043\013\041\014\040\015" +
    "\037\016\036\001\001\000\002\001\001\000\026\004\123" +
    "\006\051\007\050\010\046\011\045\012\043\013\041\014" +
    "\040\015\037\016\036\001\001\000\026\005\100\006\111" +
    "\007\110\010\107\011\106\012\105\013\104\014\103\015" +
    "\102\016\101\001\001\000\026\004\077\006\051\007\050" +
    "\010\046\011\045\012\043\013\041\014\040\015\037\016" +
    "\036\001\001\000\026\004\076\006\051\007\050\010\046" +
    "\011\045\012\043\013\041\014\040\015\037\016\036\001" +
    "\001\000\002\001\001\000\026\004\073\006\051\007\050" +
    "\010\046\011\045\012\043\013\041\014\040\015\037\016" +
    "\036\001\001\000\026\004\072\006\051\007\050\010\046" +
    "\011\045\012\043\013\041\014\040\015\037\016\036\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\017\071\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\004\122\006\051\007\050\010" +
    "\046\011\045\012\043\013\041\014\040\015\037\016\036" +
    "\001\001\000\026\004\121\006\051\007\050\010\046\011" +
    "\045\012\043\013\041\014\040\015\037\016\036\001\001" +
    "\000\026\004\120\006\051\007\050\010\046\011\045\012" +
    "\043\013\041\014\040\015\037\016\036\001\001\000\026" +
    "\004\117\006\051\007\050\010\046\011\045\012\043\013" +
    "\041\014\040\015\037\016\036\001\001\000\026\004\116" +
    "\006\051\007\050\010\046\011\045\012\043\013\041\014" +
    "\040\015\037\016\036\001\001\000\026\004\115\006\051" +
    "\007\050\010\046\011\045\012\043\013\041\014\040\015" +
    "\037\016\036\001\001\000\026\004\114\006\051\007\050" +
    "\010\046\011\045\012\043\013\041\014\040\015\037\016" +
    "\036\001\001\000\026\004\113\006\051\007\050\010\046" +
    "\011\045\012\043\013\041\014\040\015\037\016\036\001" +
    "\001\000\026\004\112\006\051\007\050\010\046\011\045" +
    "\012\043\013\041\014\040\015\037\016\036\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\020\141" +
    "\001\001\000\002\001\001\000\010\023\144\024\150\025" +
    "\147\001\001\000\010\024\162\025\161\026\160\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\023\152\024\150\025\147\001\001\000\010\023\151" +
    "\024\150\025\147\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\023\164\024\150\025\147\001\001\000\010\023\163" +
    "\024\150\025\147\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\027\171" +
    "\031\172\001\001\000\006\027\203\032\202\001\001\000" +
    "\006\027\171\031\201\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\027\171\031\204\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\021\017\022\013\030\014\046\214\001\001\000\012\021" +
    "\017\022\013\030\014\046\213\001\001\000\012\021\017" +
    "\022\013\030\014\046\212\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$SintaxOnline$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$SintaxOnline$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SintaxOnline$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public AccionesOnline online;
    public static String totalErrores;
    public JTextArea panelMensajes;
    public ArrayList<AccionesOnline> listOnline;

   public SintaxOnline(AnalizadorLexico4 lex, JTextArea panelMensajes, ArrayList<AccionesOnline> listOnline){
        super(lex);
        this.online = online;
        this.panelMensajes = panelMensajes;
        this.listOnline = listOnline;
        
    }

    public void setAccion(String tipo, String mensaje, String accion){
        System.out.println(tipo+" "+mensaje);
    }
  
    public void syntax_error(Symbol s){
        setAccion("ERROR", "Error sintaxis columna: "+s.right+" fila: "+s.left,"");
        totalErrores += "ERROR: Error sintaxis columna: "+s.right+" fila: "+s.left+"\n";
        panelMensajes.setText(totalErrores);
    }

    


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$SintaxOnline$actions {
  private final SintaxOnline parser;

  /** Constructor */
  CUP$SintaxOnline$actions(SintaxOnline parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$SintaxOnline$do_action(
    int                        CUP$SintaxOnline$act_num,
    java_cup.runtime.lr_parser CUP$SintaxOnline$parser,
    java.util.Stack            CUP$SintaxOnline$stack,
    int                        CUP$SintaxOnline$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SintaxOnline$result;

      /* select the action based on the action number */
      switch (CUP$SintaxOnline$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // f3 ::= turno DOS_PUNTOS ENTERO 
            {
              Turnos RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 Turnos turno = new Turnos(); turno.setTurno((Integer) a); RESULT=turno; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("f3",19, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // f2 ::= turnoJugador DOS_PUNTOS ENTERO 
            {
              Turnos RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 Turnos turno = new Turnos(); turno.setTurnoJugador((Integer) a); RESULT=turno; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("f2",18, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // p5 ::= f3 f1 
            {
              Turnos RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		Turnos a = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Turnos e = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getTurno()==null){ e.setTurno(a.getTurno()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p5",20, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // p5 ::= f2 f1 
            {
              Turnos RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		Turnos a = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Turnos e = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getTurnoJugador()==null){ e.setTurnoJugador(a.getTurnoJugador()); } else { } } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p5",20, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // f1 ::= 
            {
              Turnos RESULT =null;
		 RESULT=new Turnos(); 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("f1",17, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // f1 ::= COMA p5 
            {
              Turnos RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Turnos a = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 RESULT=a; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("f1",17, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // f1 ::= f3 f1 
            {
              Turnos RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		Turnos a = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Turnos e = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getTurno()==null){ e.setTurno(a.getTurno()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("f1",17, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // f1 ::= f2 f1 
            {
              Turnos RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		Turnos a = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Turnos e = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getTurnoJugador()==null){ e.setTurnoJugador(a.getTurnoJugador()); } else { } } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("f1",17, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // f ::= GENERAL LLAVE_A f1 LLAVE_B 
            {
              Turnos RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		Turnos a = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		 RESULT=a; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("f",16, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // e2 ::= estado ID DOS_PUNTOS FALSO 
            {
              ResumenTurno RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 ResumenTurno resumen = new ResumenTurno(); resumen.setNombreJugador(a.toString()); resumen.setEstadoJugador(Boolean.valueOf(a.toString())); RESULT=resumen; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("e2",21, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // e2 ::= estado ID DOS_PUNTOS VERDADERO 
            {
              ResumenTurno RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 ResumenTurno resumen = new ResumenTurno(); resumen.setNombreJugador(b.toString()); resumen.setEstadoJugador(Boolean.valueOf(a.toString())); RESULT=resumen; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("e2",21, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // p3 ::= e2 e1 
            {
              ArrayList<ResumenTurno> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		ResumenTurno a = (ResumenTurno)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		ArrayList<ResumenTurno> e = (ArrayList<ResumenTurno>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 e.add(a); RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p3",24, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // e1 ::= 
            {
              ArrayList<ResumenTurno> RESULT =null;
		 RESULT=new ArrayList<>(); 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("e1",23, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // e1 ::= COMA p3 
            {
              ArrayList<ResumenTurno> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		ArrayList<ResumenTurno> a = (ArrayList<ResumenTurno>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 RESULT=a; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("e1",23, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // e1 ::= e2 e1 
            {
              ArrayList<ResumenTurno> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		ResumenTurno a = (ResumenTurno)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		ArrayList<ResumenTurno> e = (ArrayList<ResumenTurno>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 e.add(a); RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("e1",23, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // e ::= RESUMEN LLAVE_A e1 LLAVE_B 
            {
              ArrayList<ResumenTurno> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		ArrayList<ResumenTurno> a = (ArrayList<ResumenTurno>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		 RESULT=a; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("e",22, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // c12 ::= verificador DOS_PUNTOS FALSO 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 NavesCamino naves = new NavesCamino(); naves.setVerificador(false); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c12",12, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // c12 ::= verificador DOS_PUNTOS VERDADERO 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 NavesCamino naves = new NavesCamino(); naves.setVerificador(false); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c12",12, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // c11 ::= turnoLlegada DOS_PUNTOS ENTERO 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 NavesCamino naves = new NavesCamino(); naves.setTurnoLlegada((Integer) a); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c11",11, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // c10 ::= porcMuertes DOS_PUNTOS DECIMAL 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 NavesCamino naves = new NavesCamino(); naves.setPorcentajeMuertes(Float.parseFloat(a.toString())); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c10",10, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // c9 ::= noJugadorAtaque DOS_PUNTOS ENTERO 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 NavesCamino naves = new NavesCamino(); naves.setNoJugadorAtaque((Integer) a ); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c9",9, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // c8 ::= noJugadorEnvio DOS_PUNTOS ENTERO 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 NavesCamino naves = new NavesCamino(); naves.setNoJugadorEnvio((Integer) a); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c8",8, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // c7 ::= noNaves DOS_PUNTOS ENTERO 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 NavesCamino naves = new NavesCamino(); naves.setNoNaves((Integer) a); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c7",7, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // c6 ::= planetaDestino DOS_PUNTOS ID 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 NavesCamino naves = new NavesCamino(); naves.setPlanetaDestino(a.toString()); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c6",6, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // c5 ::= planetaOrigen DOS_PUNTOS ID 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		  NavesCamino naves = new NavesCamino(); naves.setPlanetaOrigen(a.toString()); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c5",5, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // c4 ::= noFlota DOS_PUNTOS ENTERO 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 NavesCamino naves = new NavesCamino(); naves.setNoFlota((Integer) a); RESULT=naves; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c4",4, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // p1 ::= c12 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getVerificador()==null){ e.setVerificador(a.getVerificador()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p1",3, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // p1 ::= c11 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getTurnoLlegada()==null){ e.setTurnoLlegada(a.getTurnoLlegada()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p1",3, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // p1 ::= c10 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getPorcentajeMuertes()==null){ e.setPorcentajeMuertes(a.getPorcentajeMuertes()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p1",3, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // p1 ::= c9 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getNoJugadorAtaque()==null){ e.setNoJugadorAtaque(a.getNoJugadorAtaque()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p1",3, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // p1 ::= c8 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getNoJugadorEnvio()==null){ e.setNoJugadorEnvio(a.getNoJugadorEnvio()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p1",3, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // p1 ::= c7 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getNoNaves()==null){ e.setNoNaves(a.getNoNaves()); } else {  } } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p1",3, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // p1 ::= c6 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getPlanetaDestino()==null){ e.setPlanetaDestino(a.getPlanetaDestino()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p1",3, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // p1 ::= c5 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getPlanetaOrigen()==null){ e.setPlanetaOrigen(a.getPlanetaOrigen()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p1",3, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // p1 ::= c4 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getNoFlota()==null){ e.setNoFlota(a.getNoFlota()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p1",3, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // c3 ::= 
            {
              NavesCamino RESULT =null;
		 RESULT=new NavesCamino(); 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // c3 ::= COMA p1 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 RESULT=a; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // c3 ::= c12 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getVerificador()==null){ e.setVerificador(a.getVerificador()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // c3 ::= c11 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getTurnoLlegada()==null){ e.setTurnoLlegada(a.getTurnoLlegada()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // c3 ::= c10 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getPorcentajeMuertes()==null){ e.setPorcentajeMuertes(a.getPorcentajeMuertes()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // c3 ::= c9 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getNoJugadorAtaque()==null){ e.setNoJugadorAtaque(a.getNoJugadorAtaque()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // c3 ::= c8 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getNoJugadorEnvio()==null){ e.setNoJugadorEnvio(a.getNoJugadorEnvio()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // c3 ::= c7 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getNoNaves()==null){ e.setNoNaves(a.getNoNaves()); } else {  } } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // c3 ::= c6 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getPlanetaDestino()==null){ e.setPlanetaDestino(a.getPlanetaDestino()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // c3 ::= c5 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getPlanetaOrigen()==null){ e.setPlanetaOrigen(a.getPlanetaOrigen()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // c3 ::= c4 c3 
            {
              NavesCamino RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		NavesCamino e = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getNoFlota()==null){ e.setNoFlota(a.getNoFlota()); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c3",2, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // c2 ::= Flota AGRUPACION_A c3 AGRUPACION_B 
            {
              ArrayList<NavesCamino> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		 if(a.getNoFlota()==null || a.getPlanetaOrigen()==null || a.getPlanetaDestino() == null || a.getNoNaves()==null || a.getNoJugadorEnvio()==null || a.getNoJugadorAtaque()==null || a.getPorcentajeMuertes()==null || a.getTurnoLlegada()==null || a.getVerificador()==null){} else { ArrayList<NavesCamino> listNaves = new ArrayList<>(); listNaves.add(a); RESULT=listNaves; } 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c2",13, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // c2 ::= Flota AGRUPACION_A c3 AGRUPACION_B c2 
            {
              ArrayList<NavesCamino> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).right;
		NavesCamino a = (NavesCamino)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		ArrayList<NavesCamino> e = (ArrayList<NavesCamino>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(a.getNoFlota()==null || a.getPlanetaOrigen()==null || a.getPlanetaDestino() == null || a.getNoNaves()==null || a.getNoJugadorEnvio()==null || a.getNoJugadorAtaque()==null || a.getPorcentajeMuertes()==null || a.getTurnoLlegada()==null || a.getVerificador()==null){} else { e.add(a); RESULT=e; } 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c2",13, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // c1 ::= ID DOS_PUNTOS AGRUPACION_A c2 AGRUPACION_B 
            {
              ArrayList<DatosAcciones> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-4)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		ArrayList<NavesCamino> b = (ArrayList<NavesCamino>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		 DatosAcciones datos = new DatosAcciones(); datos.setNombreJugador(a.toString()); datos.setListNaves(b); ArrayList<DatosAcciones> listAcciones = new ArrayList<>(); listAcciones.add(datos); RESULT=listAcciones; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c1",14, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // c1 ::= ID DOS_PUNTOS AGRUPACION_A c2 AGRUPACION_B c1 
            {
              ArrayList<DatosAcciones> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-5)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).right;
		ArrayList<NavesCamino> b = (ArrayList<NavesCamino>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int cright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		ArrayList<DatosAcciones> c = (ArrayList<DatosAcciones>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 DatosAcciones datos = new DatosAcciones(); datos.setNombreJugador(a.toString()); datos.setListNaves(b);  c.add(datos); RESULT=c; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c1",14, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-5)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // c ::= ACCIONES LLAVE_A LLAVE_B 
            {
              ArrayList<DatosAcciones> RESULT =null;
		 RESULT=new ArrayList<>(); 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c",15, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // c ::= ACCIONES LLAVE_A c1 LLAVE_B 
            {
              ArrayList<DatosAcciones> RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		ArrayList<DatosAcciones> a = (ArrayList<DatosAcciones>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		 RESULT=a; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("c",15, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // p4 ::= f b 
            {
              AccionesOnline RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		Turnos a = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		AccionesOnline e = (AccionesOnline)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getTurnos()==null){ e.setTurnos(a); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p4",37, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // p4 ::= e b 
            {
              AccionesOnline RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		ArrayList<ResumenTurno> a = (ArrayList<ResumenTurno>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		AccionesOnline e = (AccionesOnline)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getListResumen()==null){ e.setListResumen(a); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p4",37, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // p4 ::= c b 
            {
              AccionesOnline RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		ArrayList<DatosAcciones> a = (ArrayList<DatosAcciones>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		AccionesOnline e = (AccionesOnline)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getDatosAcciones()==null){ e.setDatosAcciones(a); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("p4",37, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // b ::= 
            {
              AccionesOnline RESULT =null;
		 RESULT=new AccionesOnline(); 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("b",36, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // b ::= COMA p4 
            {
              AccionesOnline RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		AccionesOnline a = (AccionesOnline)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 RESULT=a; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("b",36, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // b ::= f b 
            {
              AccionesOnline RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		Turnos a = (Turnos)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		AccionesOnline e = (AccionesOnline)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getTurnos()==null){ e.setTurnos(a); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("b",36, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // b ::= e b 
            {
              AccionesOnline RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		ArrayList<ResumenTurno> a = (ArrayList<ResumenTurno>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		AccionesOnline e = (AccionesOnline)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getListResumen()==null){ e.setListResumen(a); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("b",36, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // b ::= c b 
            {
              AccionesOnline RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		ArrayList<DatosAcciones> a = (ArrayList<DatosAcciones>)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()).right;
		AccionesOnline e = (AccionesOnline)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.peek()).value;
		 if(e!=null){ if(e.getDatosAcciones()==null){ e.setDatosAcciones(a); } else {} } RESULT=e; 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("b",36, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // a ::= SECUENCIAS LLAVE_A b LLAVE_B 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		AccionesOnline a = (AccionesOnline)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		 if(a.getDatosAcciones()==null || a.getListResumen()==null ||  a.getTurnos()==null){} else {  parser.listOnline.add(a);  } 
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("a",1, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= a 
            {
              Object RESULT =null;

              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          return CUP$SintaxOnline$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)).value;
		RESULT = start_val;
              CUP$SintaxOnline$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.elementAt(CUP$SintaxOnline$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxOnline$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$SintaxOnline$parser.done_parsing();
          return CUP$SintaxOnline$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

