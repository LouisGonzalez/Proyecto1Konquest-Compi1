/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import Pollitos.AccionesOnline;
import Pollitos.Juego;
import Pollitos.NavesCamino;
import Pollitos.Resultados;
import gramaticas.AnalizadorLexico;
import gramaticas.SintaxCreacionMapa;
import gramaticas4.AnalizadorLexico4;
import gramaticas4.SintaxOnline;
import static interfaz.VentanaPrincipal.contador;
import static interfaz.VentanaPrincipal.contadorTurnos;
import static interfaz.VentanaPrincipal.panelJuego;
import static interfaz.VentanaPrincipal.panelMensajes;
import java.awt.Color;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import mapa.CondicionesIniciales;
import mapa.CreacionMapa;
import mapa.Jugabilidad;
import online.AccionesMovimiento;
import online.Cliente;
import online.Servidor;

/**
 *
 * @author luisGonzalez
 */
public class AdderOnline extends javax.swing.JDialog implements Observer {

    private Juego misDatos;
    private ArrayList<NavesCamino> listNaves;
    private JTextArea panelMensajes;
    private AccionesOnline datosOnline;
    private ArrayList<AccionesOnline> listOnline = new ArrayList<>();
    private final AccionesMovimiento acciones = new AccionesMovimiento();
    private CondicionesIniciales cambioDatos = new CondicionesIniciales();
    private Jugabilidad jugabilidad = new Jugabilidad();
    private ArrayList<Resultados> finales;
    private JPanel panelJuego;
    private JTextField txtNaves;
    private JButton btnTurno;
    private JLabel lblTurno;
    private CreacionMapa mapa;
    private ArrayList<Juego> datosJuego;
    private JButton btnDistancia, btnFlotas;

    /**
     * Creates new form Addernline
     */
    public AdderOnline(java.awt.Frame parent, boolean modal, Juego misDatos, ArrayList<NavesCamino> listNaves, JTextArea panelMensajes, AccionesOnline datosOnline, ArrayList<Resultados> finales, JPanel panelJuego, JLabel lblTurno, JTextField txtNaves, JButton btnTurno, CreacionMapa mapa, ArrayList<Juego> datosJuego, JButton btnDistancia, JButton btnFlotas) {
        super(parent, modal);
        initComponents();
        this.misDatos = misDatos;
        this.datosOnline = datosOnline;
        this.panelMensajes = panelMensajes;
        this.listNaves = listNaves;
        this.finales = finales;
        this.lblTurno = lblTurno;
        this.panelJuego = panelJuego;
        this.txtNaves = txtNaves;
        this.btnTurno = btnTurno;
        this.datosJuego = datosJuego;
        this.btnDistancia = btnDistancia;
        this.btnFlotas = btnFlotas;
        this.mapa = mapa;
        setLocationRelativeTo(null);
        Servidor server = new Servidor(7000);
        server.addObserver(this);
        Thread miHilo = new Thread(server);
        miHilo.start();
        JOptionPane.showMessageDialog(null, "Esperando conexion");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        texto.setColumns(20);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        titulo.setFont(new java.awt.Font("Manjari Thin", 0, 11)); // NOI18N
        titulo.setText("Adder");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Cliente cliente = new Cliente(5000, texto.getText());
        Thread c = new Thread(cliente);
        c.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    @Override
    public void update(java.util.Observable o, Object arg) {
        if (VentanaPrincipal.envioMapa == false) {
                VentanaPrincipal.envioMapa = true;
                AnalizadorLexico lexico = new AnalizadorLexico(new StringReader((String) arg));
            try {
                panelJuego.setBackground(new Color(255, 255, 255, 100));
        panelJuego.setVisible(false);
        new SintaxCreacionMapa(lexico, mapa, panelMensajes, contador, txtNaves, datosJuego, btnTurno, listNaves, panelJuego, btnDistancia, btnFlotas).parse();
                if (!datosJuego.isEmpty()) {
                   // misDatos = datosJuego.get(0);
                    panelJuego.setVisible(true);
                }
            } catch (Exception ex) {
                Logger.getLogger(AdderOnline.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {

            try {
                texto.setText((String) arg);
                AnalizadorLexico4 lexico = new AnalizadorLexico4(new StringReader((String) arg));
                new SintaxOnline(lexico, panelMensajes, listOnline).parse();
                datosOnline = listOnline.get(0);
                listOnline.clear();
                acciones.agregarNaves(datosJuego.get(0), datosOnline, listNaves);
                acciones.actualizarTurno(datosJuego.get(0), datosOnline);
                if (contador == datosJuego.get(0).getJugadores().size()) {
                    contadorTurnos++;
                    contador = 0;
                    String texto = panelMensajes.getText();
                    String mensaje = texto + "Turno: " + contadorTurnos + "\n";
                    panelMensajes.setText(mensaje);
                    jugabilidad.verificacionNavesLlegada(listNaves, datosJuego.get(0), panelMensajes);
                    if (datosJuego.get(0).getMapa().getAcumular().equals("false")) {
                        cambioDatos.aumentoProduccion(datosJuego.get(0));
                    } else {
                        cambioDatos.aumentoProduccionEn1(datosJuego.get(0));
                    }
                    cambioDatos.verificarGanador(datosJuego.get(0), panelJuego, finales);
                    verificadorPlanetasJugador(datosJuego.get(0));
                }
                lblTurno.setText("Turno: " + contadorTurnos);
                txtNaves.setText("");
                txtNaves.setEditable(false);
                btnTurno.setEnabled(false);

                datosOnline = null;

            } catch (Exception ex) {
                Logger.getLogger(AdderOnline.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public boolean retornarBooleano(boolean envioMapa) {
        envioMapa = true;
        return envioMapa;
    }

    public void verificadorPlanetasJugador(Juego misDatos) {
        if (contador < misDatos.getJugadores().size()) {
            if (misDatos.getJugadores().get(contador).getEnJuego().equals("false") && misDatos.getJugadores().get(contador).getTipo().equals("HUMANO")) {
                contador++;
                verificadorPlanetasJugador(misDatos);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea texto;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
