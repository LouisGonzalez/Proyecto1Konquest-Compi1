
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sat Mar 07 19:53:05 CST 2020
//----------------------------------------------------

package gramaticas;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import Pollitos.ArchivoConfiguracion;
import Pollitos.Mapa;
import Pollitos.Planetas;
import Pollitos.PlanetasNeutrales;
import Pollitos.Jugadores;
import mapa.CreacionMapa;
import javax.swing.JLabel;
import javax.swing.JTextArea;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sat Mar 07 19:53:05 CST 2020
  */
public class SintaxCreacionMapa extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public SintaxCreacionMapa() {super();}

  /** Constructor which sets the default scanner. */
  public SintaxCreacionMapa(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public SintaxCreacionMapa(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\250\000\002\002\004\000\002\002\004\000\002\002" +
    "\004\000\002\002\004\000\002\002\004\000\002\002\004" +
    "\000\002\002\003\000\002\062\002\000\002\003\007\000" +
    "\002\004\003\000\002\004\003\000\002\004\003\000\002" +
    "\004\003\000\002\004\003\000\002\004\003\000\002\004" +
    "\003\000\002\004\003\000\002\004\004\000\002\063\002" +
    "\000\002\004\005\000\002\023\003\000\002\023\003\000" +
    "\002\023\003\000\002\023\003\000\002\023\003\000\002" +
    "\023\003\000\002\023\003\000\002\023\003\000\002\064" +
    "\002\000\002\005\011\000\002\006\010\000\002\013\011" +
    "\000\002\013\011\000\002\065\002\000\002\007\007\000" +
    "\002\066\002\000\002\007\007\000\002\067\002\000\002" +
    "\010\007\000\002\070\002\000\002\011\007\000\002\071" +
    "\002\000\002\011\007\000\002\072\002\000\002\012\007" +
    "\000\002\073\002\000\002\012\007\000\002\014\006\000" +
    "\002\016\003\000\002\016\003\000\002\016\003\000\002" +
    "\016\004\000\002\016\004\000\002\054\003\000\002\054" +
    "\003\000\002\054\003\000\002\074\002\000\002\017\007" +
    "\000\002\075\002\000\002\017\007\000\002\076\002\000" +
    "\002\020\007\000\002\077\002\000\002\020\007\000\002" +
    "\100\002\000\002\021\007\000\002\101\002\000\002\015" +
    "\007\000\002\050\003\000\002\050\003\000\002\050\003" +
    "\000\002\050\003\000\002\102\002\000\002\022\007\000" +
    "\002\022\006\000\002\103\002\000\002\024\005\000\002" +
    "\025\003\000\002\025\003\000\002\025\003\000\002\025" +
    "\003\000\002\025\003\000\002\025\003\000\002\025\004" +
    "\000\002\104\002\000\002\025\006\000\002\105\002\000" +
    "\002\025\005\000\002\051\003\000\002\051\003\000\002" +
    "\051\003\000\002\051\003\000\002\051\003\000\002\051" +
    "\003\000\002\106\002\000\002\026\011\000\002\107\002" +
    "\000\002\027\007\000\002\110\002\000\002\030\007\000" +
    "\002\111\002\000\002\031\007\000\002\112\002\000\002" +
    "\057\007\000\002\113\002\000\002\060\007\000\002\114" +
    "\002\000\002\046\007\000\002\046\006\000\002\115\002" +
    "\000\002\032\005\000\002\033\003\000\002\033\003\000" +
    "\002\033\003\000\002\033\003\000\002\033\004\000\002" +
    "\116\002\000\002\033\006\000\002\117\002\000\002\033" +
    "\005\000\002\052\003\000\002\052\003\000\002\052\003" +
    "\000\002\052\003\000\002\120\002\000\002\034\011\000" +
    "\002\121\002\000\002\035\007\000\002\122\002\000\002" +
    "\036\007\000\002\123\002\000\002\037\007\000\002\124" +
    "\002\000\002\047\007\000\002\047\006\000\002\125\002" +
    "\000\002\040\005\000\002\041\003\000\002\041\003\000" +
    "\002\041\003\000\002\041\003\000\002\041\004\000\002" +
    "\126\002\000\002\041\006\000\002\127\002\000\002\041" +
    "\005\000\002\053\003\000\002\053\003\000\002\053\003" +
    "\000\002\053\003\000\002\130\002\000\002\042\011\000" +
    "\002\131\002\000\002\043\007\000\002\132\002\000\002" +
    "\061\011\000\002\133\002\000\002\045\010\000\002\134" +
    "\002\000\002\045\007\000\002\045\004\000\002\135\002" +
    "\000\002\044\007\000\002\136\002\000\002\044\007\000" +
    "\002\137\002\000\002\044\007\000\002\055\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0138\000\010\006\007\007\006\013\004\001\002\000" +
    "\012\016\017\032\013\036\016\037\014\001\002\000\004" +
    "\002\u0135\001\002\000\004\002\ufffb\001\002\000\012\016" +
    "\017\032\013\036\016\037\014\001\002\000\004\002\000" +
    "\001\002\000\004\002\ufffe\001\002\000\004\002\ufffd\001" +
    "\002\000\004\012\371\001\002\000\004\012\271\001\002" +
    "\000\004\002\uffff\001\002\000\004\012\211\001\002\000" +
    "\004\012\020\001\002\000\004\006\021\001\002\000\026" +
    "\007\ufffa\013\ufffa\017\ufffa\020\ufffa\021\ufffa\022\ufffa\023" +
    "\ufffa\024\ufffa\025\ufffa\031\ufffa\001\002\000\026\007\035" +
    "\013\026\017\031\020\030\021\025\022\044\023\027\024" +
    "\045\025\032\031\024\001\002\000\004\002\ufff2\001\002" +
    "\000\004\012\205\001\002\000\004\012\176\001\002\000" +
    "\022\017\031\020\030\021\025\022\044\023\027\024\045" +
    "\025\032\031\024\001\002\000\004\012\156\001\002\000" +
    "\004\012\133\001\002\000\004\012\125\001\002\000\004" +
    "\012\063\001\002\000\004\002\ufff1\001\002\000\004\002" +
    "\ufff3\001\002\000\010\006\uffef\007\uffef\013\uffef\001\002" +
    "\000\004\002\ufff4\001\002\000\004\002\ufff5\001\002\000" +
    "\004\002\ufff6\001\002\000\004\002\ufff7\001\002\000\004" +
    "\002\ufff8\001\002\000\004\002\ufff9\001\002\000\004\012" +
    "\055\001\002\000\004\012\046\001\002\000\006\004\050" +
    "\005\047\001\002\000\026\007\uffd4\013\uffd4\017\uffd4\020" +
    "\uffd4\021\uffd4\022\uffd4\023\uffd4\024\uffd4\025\uffd4\031\uffd4" +
    "\001\002\000\026\007\uffd6\013\uffd6\017\uffd6\020\uffd6\021" +
    "\uffd6\022\uffd6\023\uffd6\024\uffd6\025\uffd6\031\uffd6\001\002" +
    "\000\026\007\035\013\026\017\031\020\030\021\025\022" +
    "\044\023\027\024\045\025\032\031\024\001\002\000\004" +
    "\002\uffd5\001\002\000\026\007\035\013\026\017\031\020" +
    "\030\021\025\022\044\023\027\024\045\025\032\031\024" +
    "\001\002\000\004\002\uffd3\001\002\000\004\045\056\001" +
    "\002\000\026\007\uffdc\013\uffdc\017\uffdc\020\uffdc\021\uffdc" +
    "\022\uffdc\023\uffdc\024\uffdc\025\uffdc\031\uffdc\001\002\000" +
    "\026\007\035\013\026\017\031\020\030\021\025\022\044" +
    "\023\027\024\045\025\032\031\024\001\002\000\004\002" +
    "\uffdb\001\002\000\010\006\007\007\006\013\004\001\002" +
    "\000\004\002\uffee\001\002\000\004\006\064\001\002\000" +
    "\014\007\075\013\065\026\073\027\066\030\074\001\002" +
    "\000\010\026\073\027\066\030\074\001\002\000\004\012" +
    "\112\001\002\000\004\002\uffcf\001\002\000\004\002\uffd0" +
    "\001\002\000\004\002\uffd1\001\002\000\004\002\uffd2\001" +
    "\002\000\004\012\103\001\002\000\004\012\077\001\002" +
    "\000\026\007\035\013\026\017\031\020\030\021\025\022" +
    "\044\023\027\024\045\025\032\031\024\001\002\000\004" +
    "\002\uffcd\001\002\000\004\045\100\001\002\000\014\007" +
    "\uffc1\013\uffc1\026\uffc1\027\uffc1\030\uffc1\001\002\000\014" +
    "\007\075\013\065\026\073\027\066\030\074\001\002\000" +
    "\004\002\uffc0\001\002\000\006\004\105\005\104\001\002" +
    "\000\014\007\uffc7\013\uffc7\026\uffc7\027\uffc7\030\uffc7\001" +
    "\002\000\014\007\uffc9\013\uffc9\026\uffc9\027\uffc9\030\uffc9" +
    "\001\002\000\014\007\075\013\065\026\073\027\066\030" +
    "\074\001\002\000\004\002\uffc8\001\002\000\014\007\075" +
    "\013\065\026\073\027\066\030\074\001\002\000\004\002" +
    "\uffc6\001\002\000\006\004\114\005\113\001\002\000\014" +
    "\007\uffc3\013\uffc3\026\uffc3\027\uffc3\030\uffc3\001\002\000" +
    "\014\007\uffc5\013\uffc5\026\uffc5\027\uffc5\030\uffc5\001\002" +
    "\000\014\007\075\013\065\026\073\027\066\030\074\001" +
    "\002\000\004\002\uffc4\001\002\000\014\007\075\013\065" +
    "\026\073\027\066\030\074\001\002\000\004\002\uffc2\001" +
    "\002\000\004\002\uffcc\001\002\000\004\002\uffce\001\002" +
    "\000\004\002\uffca\001\002\000\004\002\uffcb\001\002\000" +
    "\004\015\126\001\002\000\004\047\127\001\002\000\004" +
    "\015\130\001\002\000\026\007\uffe5\013\uffe5\017\uffe5\020" +
    "\uffe5\021\uffe5\022\uffe5\023\uffe5\024\uffe5\025\uffe5\031\uffe5" +
    "\001\002\000\026\007\035\013\026\017\031\020\030\021" +
    "\025\022\044\023\027\024\045\025\032\031\024\001\002" +
    "\000\004\002\uffe4\001\002\000\004\006\134\001\002\000" +
    "\006\050\137\051\136\001\002\000\004\007\154\001\002" +
    "\000\004\012\146\001\002\000\004\012\140\001\002\000" +
    "\004\045\141\001\002\000\004\013\142\001\002\000\004" +
    "\051\143\001\002\000\004\012\144\001\002\000\004\045" +
    "\145\001\002\000\004\007\uffe2\001\002\000\004\045\147" +
    "\001\002\000\004\013\150\001\002\000\004\050\151\001" +
    "\002\000\004\012\152\001\002\000\004\045\153\001\002" +
    "\000\004\007\uffe1\001\002\000\026\007\035\013\026\017" +
    "\031\020\030\021\025\022\044\023\027\024\045\025\032" +
    "\031\024\001\002\000\004\002\uffe3\001\002\000\006\004" +
    "\160\005\157\001\002\000\026\007\uffd8\013\uffd8\017\uffd8" +
    "\020\uffd8\021\uffd8\022\uffd8\023\uffd8\024\uffd8\025\uffd8\031" +
    "\uffd8\001\002\000\026\007\uffda\013\uffda\017\uffda\020\uffda" +
    "\021\uffda\022\uffda\023\uffda\024\uffda\025\uffda\031\uffda\001" +
    "\002\000\026\007\035\013\026\017\031\020\030\021\025" +
    "\022\044\023\027\024\045\025\032\031\024\001\002\000" +
    "\004\002\uffd9\001\002\000\026\007\035\013\026\017\031" +
    "\020\030\021\025\022\044\023\027\024\045\025\032\031" +
    "\024\001\002\000\004\002\uffd7\001\002\000\004\002\ufff0" +
    "\001\002\000\004\002\uffe6\001\002\000\004\002\uffe8\001" +
    "\002\000\004\002\uffe9\001\002\000\004\002\uffea\001\002" +
    "\000\004\002\uffeb\001\002\000\004\002\uffec\001\002\000" +
    "\004\002\uffed\001\002\000\004\002\uffe7\001\002\000\006" +
    "\004\200\005\177\001\002\000\026\007\uffde\013\uffde\017" +
    "\uffde\020\uffde\021\uffde\022\uffde\023\uffde\024\uffde\025\uffde" +
    "\031\uffde\001\002\000\026\007\uffe0\013\uffe0\017\uffe0\020" +
    "\uffe0\021\uffe0\022\uffe0\023\uffe0\024\uffe0\025\uffe0\031\uffe0" +
    "\001\002\000\026\007\035\013\026\017\031\020\030\021" +
    "\025\022\044\023\027\024\045\025\032\031\024\001\002" +
    "\000\004\002\uffdf\001\002\000\026\007\035\013\026\017" +
    "\031\020\030\021\025\022\044\023\027\024\045\025\032" +
    "\031\024\001\002\000\004\002\uffdd\001\002\000\004\045" +
    "\206\001\002\000\026\007\uffbf\013\uffbf\017\uffbf\020\uffbf" +
    "\021\uffbf\022\uffbf\023\uffbf\024\uffbf\025\uffbf\031\uffbf\001" +
    "\002\000\026\007\035\013\026\017\031\020\030\021\025" +
    "\022\044\023\027\024\045\025\032\031\024\001\002\000" +
    "\004\002\uffbe\001\002\000\004\010\212\001\002\000\006" +
    "\006\uff97\011\214\001\002\000\004\006\220\001\002\000" +
    "\010\006\007\007\006\013\004\001\002\000\004\002\uff95" +
    "\001\002\000\004\002\uff5a\001\002\000\004\002\uff96\001" +
    "\002\000\016\007\uff94\013\uff94\030\uff94\033\uff94\034\uff94" +
    "\035\uff94\001\002\000\016\007\225\013\223\030\224\033" +
    "\231\034\226\035\233\001\002\000\004\002\uff91\001\002" +
    "\000\012\030\224\033\231\034\226\035\233\001\002\000" +
    "\004\012\260\001\002\000\006\011\uff8b\013\253\001\002" +
    "\000\004\012\247\001\002\000\004\002\uff92\001\002\000" +
    "\004\002\uff93\001\002\000\004\012\241\001\002\000\004" +
    "\002\uff8f\001\002\000\004\012\235\001\002\000\004\002" +
    "\uff90\001\002\000\004\046\236\001\002\000\016\007\uff7f" +
    "\013\uff7f\030\uff7f\033\uff7f\034\uff7f\035\uff7f\001\002\000" +
    "\016\007\225\013\223\030\224\033\231\034\226\035\233" +
    "\001\002\000\004\002\uff7e\001\002\000\004\015\242\001" +
    "\002\000\004\047\243\001\002\000\004\015\244\001\002" +
    "\000\016\007\uff85\013\uff85\030\uff85\033\uff85\034\uff85\035" +
    "\uff85\001\002\000\016\007\225\013\223\030\224\033\231" +
    "\034\226\035\233\001\002\000\004\002\uff84\001\002\000" +
    "\004\045\250\001\002\000\016\007\uff83\013\uff83\030\uff83" +
    "\033\uff83\034\uff83\035\uff83\001\002\000\016\007\225\013" +
    "\223\030\224\033\231\034\226\035\233\001\002\000\004" +
    "\002\uff82\001\002\000\004\006\uff8d\001\002\000\004\011" +
    "\214\001\002\000\004\002\uff8a\001\002\000\004\006\220" +
    "\001\002\000\004\002\uff8c\001\002\000\004\045\261\001" +
    "\002\000\016\007\uff81\013\uff81\030\uff81\033\uff81\034\uff81" +
    "\035\uff81\001\002\000\016\007\225\013\223\030\224\033" +
    "\231\034\226\035\233\001\002\000\004\002\uff80\001\002" +
    "\000\004\002\uff88\001\002\000\004\002\uff8e\001\002\000" +
    "\004\002\uff89\001\002\000\004\002\uff86\001\002\000\004" +
    "\002\uff87\001\002\000\004\010\272\001\002\000\006\006" +
    "\uff7d\011\214\001\002\000\004\006\276\001\002\000\004" +
    "\002\uff7b\001\002\000\004\002\uff7c\001\002\000\016\007" +
    "\uff7a\013\uff7a\033\uff7a\040\uff7a\041\uff7a\052\uff7a\001\002" +
    "\000\016\007\302\013\300\033\312\040\304\041\307\052" +
    "\301\001\002\000\012\033\312\040\304\041\307\052\301" +
    "\001\002\000\004\012\356\001\002\000\006\011\uff71\013" +
    "\351\001\002\000\004\002\uff75\001\002\000\004\012\333" +
    "\001\002\000\004\002\uff76\001\002\000\004\002\uff77\001" +
    "\002\000\004\012\321\001\002\000\004\002\uff78\001\002" +
    "\000\004\002\uff79\001\002\000\004\012\313\001\002\000" +
    "\004\015\314\001\002\000\004\047\315\001\002\000\004" +
    "\015\316\001\002\000\016\007\uff6b\013\uff6b\033\uff6b\040" +
    "\uff6b\041\uff6b\052\uff6b\001\002\000\016\007\302\013\300" +
    "\033\312\040\304\041\307\052\301\001\002\000\004\002" +
    "\uff6a\001\002\000\010\042\322\043\323\044\324\001\002" +
    "\000\016\007\uff5c\013\uff5c\033\uff5c\040\uff5c\041\uff5c\052" +
    "\uff5c\001\002\000\016\007\uff5e\013\uff5e\033\uff5e\040\uff5e" +
    "\041\uff5e\052\uff5e\001\002\000\016\007\uff60\013\uff60\033" +
    "\uff60\040\uff60\041\uff60\052\uff60\001\002\000\016\007\302" +
    "\013\300\033\312\040\304\041\307\052\301\001\002\000" +
    "\004\002\uff5f\001\002\000\016\007\302\013\300\033\312" +
    "\040\304\041\307\052\301\001\002\000\004\002\uff5d\001" +
    "\002\000\016\007\302\013\300\033\312\040\304\041\307" +
    "\052\301\001\002\000\004\002\uff5b\001\002\000\004\010" +
    "\334\001\002\000\006\011\uff69\015\uff69\001\002\000\006" +
    "\011\337\015\340\001\002\000\004\002\uff68\001\002\000" +
    "\016\007\302\013\300\033\312\040\304\041\307\052\301" +
    "\001\002\000\004\047\341\001\002\000\004\015\342\001" +
    "\002\000\010\011\uff63\013\343\015\uff63\001\002\000\006" +
    "\011\uff65\015\uff65\001\002\000\006\011\337\015\340\001" +
    "\002\000\004\002\uff62\001\002\000\006\011\337\015\340" +
    "\001\002\000\004\002\uff64\001\002\000\004\002\uff61\001" +
    "\002\000\004\006\uff73\001\002\000\004\011\214\001\002" +
    "\000\004\002\uff70\001\002\000\004\006\276\001\002\000" +
    "\004\002\uff72\001\002\000\004\015\357\001\002\000\004" +
    "\055\360\001\002\000\004\015\361\001\002\000\016\007" +
    "\uff67\013\uff67\033\uff67\040\uff67\041\uff67\052\uff67\001\002" +
    "\000\016\007\302\013\300\033\312\040\304\041\307\052" +
    "\301\001\002\000\004\002\uff66\001\002\000\004\002\uff74" +
    "\001\002\000\004\002\uff6c\001\002\000\004\002\uff6d\001" +
    "\002\000\004\002\uff6e\001\002\000\004\002\uff6f\001\002" +
    "\000\004\010\372\001\002\000\006\006\uffb9\011\214\001" +
    "\002\000\004\006\376\001\002\000\004\002\uffb7\001\002" +
    "\000\004\002\uffb8\001\002\000\022\007\uffb6\013\uffb6\030" +
    "\uffb6\033\uffb6\034\uffb6\035\uffb6\053\uffb6\054\uffb6\001\002" +
    "\000\022\007\u0104\013\u0102\030\u0103\033\u010a\034\u0107\035" +
    "\u010c\053\u0101\054\u0100\001\002\000\004\012\u0131\001\002" +
    "\000\004\012\u012d\001\002\000\016\030\u0103\033\u010a\034" +
    "\u0107\035\u010c\053\u0101\054\u0100\001\002\000\004\012\u0122" +
    "\001\002\000\006\011\uffab\013\u011d\001\002\000\004\002" +
    "\uffaf\001\002\000\004\002\uffb0\001\002\000\004\012\u0119" +
    "\001\002\000\004\002\uffb1\001\002\000\004\002\uffb2\001" +
    "\002\000\004\012\u0113\001\002\000\004\002\uffb3\001\002" +
    "\000\004\012\u010f\001\002\000\004\002\uffb4\001\002\000" +
    "\004\002\uffb5\001\002\000\004\046\u0110\001\002\000\022" +
    "\007\uff9d\013\uff9d\030\uff9d\033\uff9d\034\uff9d\035\uff9d\053" +
    "\uff9d\054\uff9d\001\002\000\022\007\u0104\013\u0102\030\u0103" +
    "\033\u010a\034\u0107\035\u010c\053\u0101\054\u0100\001\002\000" +
    "\004\002\uff9c\001\002\000\004\015\u0114\001\002\000\004" +
    "\047\u0115\001\002\000\004\015\u0116\001\002\000\022\007" +
    "\uffa3\013\uffa3\030\uffa3\033\uffa3\034\uffa3\035\uffa3\053\uffa3" +
    "\054\uffa3\001\002\000\022\007\u0104\013\u0102\030\u0103\033" +
    "\u010a\034\u0107\035\u010c\053\u0101\054\u0100\001\002\000\004" +
    "\002\uffa2\001\002\000\004\045\u011a\001\002\000\022\007" +
    "\uffa1\013\uffa1\030\uffa1\033\uffa1\034\uffa1\035\uffa1\053\uffa1" +
    "\054\uffa1\001\002\000\022\007\u0104\013\u0102\030\u0103\033" +
    "\u010a\034\u0107\035\u010c\053\u0101\054\u0100\001\002\000\004" +
    "\002\uffa0\001\002\000\004\006\uffad\001\002\000\004\011" +
    "\214\001\002\000\004\002\uffaa\001\002\000\004\006\376" +
    "\001\002\000\004\002\uffac\001\002\000\004\045\u0123\001" +
    "\002\000\022\007\uff9f\013\uff9f\030\uff9f\033\uff9f\034\uff9f" +
    "\035\uff9f\053\uff9f\054\uff9f\001\002\000\022\007\u0104\013" +
    "\u0102\030\u0103\033\u010a\034\u0107\035\u010c\053\u0101\054\u0100" +
    "\001\002\000\004\002\uff9e\001\002\000\004\002\uffae\001" +
    "\002\000\004\002\uffa4\001\002\000\004\002\uffa5\001\002" +
    "\000\004\002\uffa6\001\002\000\004\002\uffa7\001\002\000" +
    "\004\002\uffa8\001\002\000\004\002\uffa9\001\002\000\004" +
    "\045\u012e\001\002\000\022\007\uff9b\013\uff9b\030\uff9b\033" +
    "\uff9b\034\uff9b\035\uff9b\053\uff9b\054\uff9b\001\002\000\022" +
    "\007\u0104\013\u0102\030\u0103\033\u010a\034\u0107\035\u010c\053" +
    "\u0101\054\u0100\001\002\000\004\002\uff9a\001\002\000\004" +
    "\045\u0132\001\002\000\022\007\uff99\013\uff99\030\uff99\033" +
    "\uff99\034\uff99\035\uff99\053\uff99\054\uff99\001\002\000\022" +
    "\007\u0104\013\u0102\030\u0103\033\u010a\034\u0107\035\u010c\053" +
    "\u0101\054\u0100\001\002\000\004\002\uff98\001\002\000\004" +
    "\002\001\001\002\000\004\002\uffbc\001\002\000\004\002" +
    "\uffbb\001\002\000\004\002\ufffc\001\002\000\004\002\uffbd" +
    "\001\002\000\004\002\uffba\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0138\000\004\002\004\001\001\000\014\003\u0138\022" +
    "\u0135\046\u0136\047\u0139\050\u0137\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\003\007\022\014\046\010\047" +
    "\011\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\062\021\001\001\000\024\004\042\005\041\006" +
    "\040\007\037\010\036\011\035\012\033\014\022\015\032" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\005\173\006\172\007\171\010\170\011\167" +
    "\012\166\014\174\015\165\023\164\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\063\060\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\073\052\001\001\000\004\072\050\001\001\000\024\004" +
    "\051\005\041\006\040\007\037\010\036\011\035\012\033" +
    "\014\022\015\032\001\001\000\002\001\001\000\024\004" +
    "\053\005\041\006\040\007\037\010\036\011\035\012\033" +
    "\014\022\015\032\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\067\056\001\001\000\024\004\057\005\041" +
    "\006\040\007\037\010\036\011\035\012\033\014\022\015" +
    "\032\001\001\000\002\001\001\000\004\002\061\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\016\071\017" +
    "\070\020\067\021\066\001\001\000\012\017\120\020\123" +
    "\021\122\054\121\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\024\004\075\005" +
    "\041\006\040\007\037\010\036\011\035\012\033\014\022" +
    "\015\032\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\100\100\001\001\000\012\016\101\017\070\020\067" +
    "\021\066\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\075\107\001\001\000\004\074\105\001\001\000\012" +
    "\016\106\017\070\020\067\021\066\001\001\000\002\001" +
    "\001\000\012\016\110\017\070\020\067\021\066\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\077\116\001" +
    "\001\000\004\076\114\001\001\000\012\016\115\017\070" +
    "\020\067\021\066\001\001\000\002\001\001\000\012\016" +
    "\117\017\070\020\067\021\066\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\064\130\001\001\000\024\004\131\005" +
    "\041\006\040\007\037\010\036\011\035\012\033\014\022" +
    "\015\032\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\013\134\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\004\154\005\041\006\040\007\037\010\036\011" +
    "\035\012\033\014\022\015\032\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\071\162\001\001\000\004\070" +
    "\160\001\001\000\024\004\161\005\041\006\040\007\037" +
    "\010\036\011\035\012\033\014\022\015\032\001\001\000" +
    "\002\001\001\000\024\004\163\005\041\006\040\007\037" +
    "\010\036\011\035\012\033\014\022\015\032\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\066\202\001\001\000\004\065" +
    "\200\001\001\000\024\004\201\005\041\006\040\007\037" +
    "\010\036\011\035\012\033\014\022\015\032\001\001\000" +
    "\002\001\001\000\024\004\203\005\041\006\040\007\037" +
    "\010\036\011\035\012\033\014\022\015\032\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\101\206\001\001" +
    "\000\024\004\207\005\041\006\040\007\037\010\036\011" +
    "\035\012\033\014\022\015\032\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\055\214\114\212\001\001\000" +
    "\004\032\216\001\001\000\004\002\215\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\115" +
    "\220\001\001\000\014\033\227\034\226\035\221\036\233" +
    "\037\231\001\001\000\002\001\001\000\014\034\265\035" +
    "\263\036\267\037\266\052\264\001\001\000\002\001\001" +
    "\000\004\117\253\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\123\236\001\001\000\014\033\237\034\226\035\221" +
    "\036\233\037\231\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\120\244" +
    "\001\001\000\014\033\245\034\226\035\221\036\233\037" +
    "\231\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\121\250\001\001\000\014\033\251\034\226\035\221\036" +
    "\233\037\231\001\001\000\002\001\001\000\004\116\255" +
    "\001\001\000\004\055\254\001\001\000\002\001\001\000" +
    "\004\032\256\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\122\261\001\001\000\014\033\262\034\226\035" +
    "\221\036\233\037\231\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\055\273" +
    "\124\272\001\001\000\004\040\274\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\125\276\001\001\000\014" +
    "\041\310\042\307\043\305\044\304\061\302\001\001\000" +
    "\014\042\367\043\366\044\365\053\363\061\364\001\001" +
    "\000\002\001\001\000\004\127\351\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\130\316\001\001\000\014\041\317\042" +
    "\307\043\305\044\304\061\302\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\137\330\001\001\000\004\136" +
    "\326\001\001\000\004\135\324\001\001\000\014\041\325" +
    "\042\307\043\305\044\304\061\302\001\001\000\002\001" +
    "\001\000\014\041\327\042\307\043\305\044\304\061\302" +
    "\001\001\000\002\001\001\000\014\041\331\042\307\043" +
    "\305\044\304\061\302\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\131\334\001\001\000\004\045\335\001" +
    "\001\000\002\001\001\000\014\041\347\042\307\043\305" +
    "\044\304\061\302\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\134\343\001\001\000\004\133\345\001\001" +
    "\000\004\045\344\001\001\000\002\001\001\000\004\045" +
    "\346\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\126\353\001\001\000\004\055\352\001\001\000\002\001" +
    "\001\000\004\040\354\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\132" +
    "\361\001\001\000\014\041\362\042\307\043\305\044\304" +
    "\061\302\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\055\373\102\372\001" +
    "\001\000\004\024\374\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\103\376\001\001\000\020\025\u010d\026" +
    "\u010c\027\u010a\030\u0108\031\u0107\057\u0105\060\u0104\001\001" +
    "\000\002\001\001\000\002\001\001\000\020\026\u012b\027" +
    "\u012a\030\u0129\031\u0128\051\u0125\057\u0127\060\u0126\001\001" +
    "\000\002\001\001\000\004\105\u011d\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\111\u0110\001\001\000\020\025\u0111\026" +
    "\u010c\027\u010a\030\u0108\031\u0107\057\u0105\060\u0104\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\106\u0116\001\001\000\020\025\u0117" +
    "\026\u010c\027\u010a\030\u0108\031\u0107\057\u0105\060\u0104\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\107\u011a" +
    "\001\001\000\020\025\u011b\026\u010c\027\u010a\030\u0108\031" +
    "\u0107\057\u0105\060\u0104\001\001\000\002\001\001\000\004" +
    "\104\u011f\001\001\000\004\055\u011e\001\001\000\002\001" +
    "\001\000\004\024\u0120\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\110\u0123\001\001\000\020\025\u0124\026" +
    "\u010c\027\u010a\030\u0108\031\u0107\057\u0105\060\u0104\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\112" +
    "\u012e\001\001\000\020\025\u012f\026\u010c\027\u010a\030\u0108" +
    "\031\u0107\057\u0105\060\u0104\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\113\u0132\001\001\000\020\025\u0133" +
    "\026\u010c\027\u010a\030\u0108\031\u0107\057\u0105\060\u0104\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$SintaxCreacionMapa$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$SintaxCreacionMapa$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SintaxCreacionMapa$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    CreacionMapa tablero;
    ArrayList<ArchivoConfiguracion> listArchivos;
    ArrayList<Planetas> listPlanetas;
    ArrayList<PlanetasNeutrales> listPlanetasNeutrales;
    ArrayList<Jugadores> listJugadores;
    Mapa mapita;
    Planetas planeta;
    PlanetasNeutrales neutral;
    Jugadores jugador;
    String planetaNombre;
    JLabel[][] matrizJuego;
    boolean interruptor = true;
    JTextArea panelMensajes;
    public static String totalErrores;


    public SintaxCreacionMapa(AnalizadorLexico lex, ArrayList<ArchivoConfiguracion> listArchivos, CreacionMapa tablero, JTextArea panelMensajes){
        super(lex);
        this.listArchivos = listArchivos;
        this.tablero = tablero;
        this.matrizJuego = matrizJuego;
        this.panelMensajes = panelMensajes;
    }

    public void setAccion(String tipo, String mensaje, String accion){
        System.out.println(tipo+" "+mensaje);
    }
  
    public void syntax_error(Symbol s){
        setAccion("ERROR", "Error sintaxis columna: "+s.right+" fila: "+s.left,"");
        totalErrores += "ERROR: Error sintaxis columna: "+s.right+" fila: "+s.left+"\n";
    }

    public void crearCuadriculaJuego(int filas, int columnas, ArrayList<Jugadores> listJugadores){
        tablero.creacionCuadricula(filas, columnas, listJugadores);
    }


    public boolean verificadorNombresJugadores(ArrayList<Jugadores> listJugadores, String nombre, boolean verificador){
        if(verificador == true){
            if(nombre.length() > 10){
                verificador = false;
                totalErrores += "Atributo nombre sobrepaso la cantidad de caracteres permitidos (10)\n";
            }
        }
        if(verificador == true){
            if(!listJugadores.isEmpty()){
                for(int i = 0; i < listJugadores.size(); i++){
                    if(listJugadores.get(i).getNombre().equals(nombre)){
                        verificador = false;
                        totalErrores += "Dos o mas jugadores llevan el mismo nombre\n";
                        break;
                    }   
                }
            }
        }
        return verificador;
    }

    public boolean verificadorNombresPlanetas(ArrayList<Planetas> listPlanetas, String nombre, boolean verificador){
        if(verificador == true){
            if(nombre.length() > 3){
                verificador = false;
                totalErrores += "Atributo nombre sobrepaso la cantidad de caracteres permitidos (3)\n";
            }
        }
        if(verificador == true){
            if(!listPlanetas.isEmpty()){
                for(int i = 0; i < listPlanetas.size(); i++){
                    if(listPlanetas.get(i).getNombre().equals(nombre)){
                        totalErrores += "Dos o mas planetas llevan el mismo nombre\n";
                        verificador = false;
                        break;
                    }
                }
            }
        }
        return verificador;
    }

    public boolean verificadorNombresPlanetasNeutrales(ArrayList<PlanetasNeutrales> listPNeutrales, String nombre, boolean verificador){
        if(verificador == true){    
            if(nombre.length() > 3){
                verificador = false;
                totalErrores += "Atributo nombre sobrepaso la cantidad de caracteres permitidos (3)\n";
            }
        }
        if(verificador == true){        
            if(!listPlanetas.isEmpty()){
                for(int i = 0; i < listPNeutrales.size(); i++){
                    if(listPNeutrales.get(i).getNombre().equals(nombre)){
                        verificador = false;
                        totalErrores += "Dos o mas planetas neutrales llevan el mismo nombre\n";
                        break;
                    }
                }
            }
        }
        return verificador;
    }

    public void creacionMapa(ArrayList<Jugadores> listJugadores, boolean verificador, ArrayList<Planetas> listPlanetas, Mapa mapita, JTextArea panelMensajes, String totalErroress){
        tablero.agregarPlanetasTablero(Integer.parseInt(mapita.getSize_filas()), Integer.parseInt(mapita.getSize_columnas()), listJugadores, listPlanetas);
        if(!listPlanetas.isEmpty()){
            verificador = false;
            totalErroress += "Hay mas planetas de los sentenciados para los jugadores\n";
            panelMensajes.setText(totalErroress);
        }
        for(int i = 0; i < listJugadores.size(); i++){
            if(!listJugadores.get(i).getPlanetas().isEmpty()){
                verificador = false;
                totalErroress += "Hay mas planetas de los sentenciados para los jugadores\n";
                panelMensajes.setText(totalErroress);
                break;
            }
        }
        if(verificador == true){
            verificador = tablero.comparacionFilasColumnasPosPlanetas(mapita, listJugadores, verificador);
            if(verificador == false){
                totalErroress += "Algun planeta esta situado en una posicion que no existe dentro del mapa\n";
            }
        }
        if(verificador == true){
            verificador = tablero.comparacionPosPlanetas(listJugadores, verificador);
            if(verificador == false){
                totalErroress += "Dos planetas estan situados en la misma posicion\n";
            }
        }
        if(verificador == true) {
            crearCuadriculaJuego(Integer.parseInt(mapita.getSize_filas()), Integer.parseInt(mapita.getSize_columnas()), listJugadores);
        } else { 
            panelMensajes.setText(totalErroress);
        }    
        
    }
  

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$SintaxCreacionMapa$actions {
  private final SintaxCreacionMapa parser;

  /** Constructor */
  CUP$SintaxCreacionMapa$actions(SintaxCreacionMapa parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$SintaxCreacionMapa$do_action(
    int                        CUP$SintaxCreacionMapa$act_num,
    java_cup.runtime.lr_parser CUP$SintaxCreacionMapa$parser,
    java.util.Stack            CUP$SintaxCreacionMapa$stack,
    int                        CUP$SintaxCreacionMapa$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SintaxCreacionMapa$result;

      /* select the action based on the action number */
      switch (CUP$SintaxCreacionMapa$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // cierre ::= AGRUPACION_B a 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("cierre",43, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // ah ::= tipo DOS_PUNTOS HUMANO NT$45 ae 
            {
              Object RESULT =null;
              // propagate RESULT from NT$45
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ah",34, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // NT$45 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.jugador.getTipo() == null) { parser.jugador.setTipo(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$37",82, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo tipo en un campo JUGADOR sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$45",93, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // ah ::= tipo DOS_PUNTOS DIFICIL NT$44 ae 
            {
              Object RESULT =null;
              // propagate RESULT from NT$44
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ah",34, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // NT$44 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.jugador.getTipo() == null) { parser.jugador.setTipo(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$37",82, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo tipo en un campo JUGADOR sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$44",92, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // ah ::= tipo DOS_PUNTOS FACIL NT$43 ae 
            {
              Object RESULT =null;
              // propagate RESULT from NT$43
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ah",34, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // NT$43 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.jugador.getTipo() == null) { parser.jugador.setTipo(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$37",82, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo tipo en un campo JUGADOR sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$43",91, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // ai ::= AGRUPACION_B ae 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ai",35, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // ai ::= COMILLAS ID COMILLAS NT$42 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$42
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ai",35, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // NT$42 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
 parser.planetaNombre = a.toString(); parser.jugador.getPlanetas().add(a.toString()); 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$42",90, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // ai ::= COMILLAS ID COMILLAS COMA NT$41 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$41
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ai",35, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-5)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // NT$41 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;
 parser.planetaNombre = a.toString(); parser.jugador.getPlanetas().add(a.toString());  
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$41",89, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // al ::= color DOS_PUNTOS COMILLAS COLOR COMILLAS NT$40 ae 
            {
              Object RESULT =null;
              // propagate RESULT from NT$40
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("al",47, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-6)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // NT$40 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
 if(parser.jugador.getColor() == null) { parser.jugador.setColor(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$40",88, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo color en un campo JUGADOR sentenciado mas de una vez\n"; }  
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$40",88, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // ag ::= planetas DOS_PUNTOS AGRUPACION_A NT$39 ai 
            {
              Object RESULT =null;
              // propagate RESULT from NT$39
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ag",33, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // NT$39 ::= 
            {
              Object RESULT =null;
 if(parser.jugador.getPlanetas() == null) { parser.jugador.setPlanetas(new ArrayList<>());  } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$34",79, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo planetas en un campo JUGADOR sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$39",87, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // af ::= nombre DOS_PUNTOS COMILLAS ID COMILLAS NT$38 ae 
            {
              Object RESULT =null;
              // propagate RESULT from NT$38
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("af",32, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-6)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // NT$38 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
 if(parser.jugador.getNombre() == null) { parser.jugador.setNombre(a.toString());  parser.jugador.setMisPlanetas(new ArrayList<>()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$33",78, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo nombre en un campo JUGADOR sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$38",86, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // q7 ::= al 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q7",41, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // q7 ::= ah 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q7",41, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // q7 ::= ag 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q7",41, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // q7 ::= af 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q7",41, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // ae ::= LLAVE_B NT$37 cierre 
            {
              Object RESULT =null;
              // propagate RESULT from NT$37
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ae",31, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // NT$37 ::= 
            {
              Object RESULT =null;
 if(parser.jugador.getColor()!=null && parser.jugador.getNombre() != null && parser.jugador.getPlanetas() != null && parser.jugador.getTipo() != null) {  parser.interruptor = parser.verificadorNombresJugadores(parser.listJugadores, parser.jugador.getNombre(), parser.interruptor); if(parser.interruptor == true) { parser.listJugadores.add(parser.jugador); } else { parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$35",80, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); }  }  else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$34",79, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Falta de uno o mas atributos en un jugador\n"; }  
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$37",85, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // ae ::= LLAVE_B COMA NT$36 ad 
            {
              Object RESULT =null;
              // propagate RESULT from NT$36
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ae",31, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // NT$36 ::= 
            {
              Object RESULT =null;
 if(parser.jugador.getColor()!=null && parser.jugador.getNombre() != null && parser.jugador.getPlanetas() != null && parser.jugador.getTipo() != null) {  parser.interruptor = parser.verificadorNombresJugadores(parser.listJugadores, parser.jugador.getNombre(), parser.interruptor); if(parser.interruptor == true) { parser.listJugadores.add(parser.jugador); } else { parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$34",79, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); }  } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$33",78, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Falta de uno o mas atributos en un jugador\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$36",84, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // ae ::= COMA q7 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ae",31, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // ae ::= al 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ae",31, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // ae ::= ah 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ae",31, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // ae ::= ag 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ae",31, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // ae ::= af 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ae",31, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // ad ::= LLAVE_A NT$35 ae 
            {
              Object RESULT =null;
              // propagate RESULT from NT$35
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ad",30, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // NT$35 ::= 
            {
              Object RESULT =null;
 parser.jugador = new Jugadores(); 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$35",83, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // jug ::= JUGADORES DOS_PUNTOS AGRUPACION_A cierre 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("jug",37, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // jug ::= JUGADORES DOS_PUNTOS AGRUPACION_A NT$34 ad 
            {
              Object RESULT =null;
              // propagate RESULT from NT$34
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("jug",37, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // NT$34 ::= 
            {
              Object RESULT =null;
 if(parser.listJugadores == null){ parser.listJugadores = new ArrayList<>(); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$31",76, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo JUGADORES ya habia sido sentenciado anteriormente\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$34",82, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // ac ::= porcMuertes DOS_PUNTOS DECIMAL NT$33 y 
            {
              Object RESULT =null;
              // propagate RESULT from NT$33
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ac",29, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // NT$33 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.neutral.getPorcentajeMuertes() == null) { parser.neutral.setPorcentajeMuertes(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$28",73, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo porcentajeMuertes en un campo PLANETA NEUTRAL sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$33",81, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // ab ::= produccion DOS_PUNTOS ENTERO NT$32 y 
            {
              Object RESULT =null;
              // propagate RESULT from NT$32
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ab",28, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // NT$32 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.neutral.getProduccion() == null) { parser.neutral.setProduccion(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$27",72, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo producion en un campo PLANETA NEUTRAL sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$32",80, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // aa ::= naves DOS_PUNTOS ENTERO NT$31 y 
            {
              Object RESULT =null;
              // propagate RESULT from NT$31
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("aa",27, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // NT$31 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.neutral.getNaves() == null) { parser.neutral.setNaves(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$26",71, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo naves en un campo PLANETA NEUTRAL sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$31",79, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // z ::= nombre DOS_PUNTOS COMILLAS ID COMILLAS NT$30 y 
            {
              Object RESULT =null;
              // propagate RESULT from NT$30
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("z",26, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-6)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // NT$30 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
 if(parser.neutral.getNombre() == null) { parser.neutral.setNombre(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$25",70, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo nombre en un campo PLANETAS NEUTRALES sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$30",78, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // q5 ::= ac 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q5",40, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // q5 ::= ab 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q5",40, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // q5 ::= aa 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q5",40, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // q5 ::= z 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q5",40, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // y ::= LLAVE_B NT$29 cierre 
            {
              Object RESULT =null;
              // propagate RESULT from NT$29
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("y",25, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // NT$29 ::= 
            {
              Object RESULT =null;
 if(parser.neutral.getNombre() != null && parser.neutral.getNaves() != null && parser.neutral.getProduccion() != null && parser.neutral.getPorcentajeMuertes() != null) { parser.interruptor = parser.verificadorNombresPlanetasNeutrales(parser.listPlanetasNeutrales, parser.neutral.getNombre(), parser.interruptor); if(parser.interruptor == true) { parser.listPlanetasNeutrales.add(parser.neutral); } else { parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$26",71, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); } } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$25",70, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Falta de uno o mas atributos en un planeta neutral\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$29",77, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // y ::= LLAVE_B COMA NT$28 x 
            {
              Object RESULT =null;
              // propagate RESULT from NT$28
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("y",25, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // NT$28 ::= 
            {
              Object RESULT =null;
 if(parser.neutral.getNombre() != null && parser.neutral.getNaves() != null && parser.neutral.getProduccion() != null && parser.neutral.getPorcentajeMuertes() != null) { parser.interruptor = parser.verificadorNombresPlanetasNeutrales(parser.listPlanetasNeutrales, parser.neutral.getNombre(), parser.interruptor); if(parser.interruptor == true) { parser.listPlanetasNeutrales.add(parser.neutral); } else { parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$26",71, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT));  } } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$25",70, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Falta de uno o mas atributos en un planeta neutral\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$28",76, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // y ::= COMA q5 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("y",25, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // y ::= ac 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("y",25, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // y ::= ab 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("y",25, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // y ::= aa 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("y",25, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // y ::= z 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("y",25, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // x ::= LLAVE_A NT$27 y 
            {
              Object RESULT =null;
              // propagate RESULT from NT$27
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("x",24, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // NT$27 ::= 
            {
              Object RESULT =null;
 parser.neutral = new PlanetasNeutrales(); 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$27",75, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // pn ::= PLANETAS_NEUTRALES DOS_PUNTOS AGRUPACION_A cierre 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("pn",36, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // pn ::= PLANETAS_NEUTRALES DOS_PUNTOS AGRUPACION_A NT$26 x 
            {
              Object RESULT =null;
              // propagate RESULT from NT$26
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("pn",36, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // NT$26 ::= 
            {
              Object RESULT =null;
 if(parser.listPlanetasNeutrales == null) { parser.listPlanetasNeutrales = new ArrayList<>(); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$23",68, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo PLANETAS NEUTRALES ya habia sido sentenciado anteriormente\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$26",74, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // ak ::= posY DOS_PUNTOS ENTERO NT$25 s 
            {
              Object RESULT =null;
              // propagate RESULT from NT$25
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("ak",46, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // NT$25 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.planeta.getPosicionY()==null) { parser.planeta.setPosicionY(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("ak",46, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo posicionY en un campo PLANETAS sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$25",73, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // aj ::= posX DOS_PUNTOS ENTERO NT$24 s 
            {
              Object RESULT =null;
              // propagate RESULT from NT$24
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("aj",45, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // NT$24 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.planeta.getPosicionX()==null) { parser.planeta.setPosicionX(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("aj",45, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo posicionX en un campo PLANETAS sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$24",72, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // w ::= porcMuertes DOS_PUNTOS DECIMAL NT$23 s 
            {
              Object RESULT =null;
              // propagate RESULT from NT$23
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("w",23, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // NT$23 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.planeta.getPorcentajeMuertes() == null) { parser.planeta.setPorcentajeMuertes(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$20",65, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo porcentajeMuertes en un campo PLANETAS sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$23",71, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // v ::= produccion DOS_PUNTOS ENTERO NT$22 s 
            {
              Object RESULT =null;
              // propagate RESULT from NT$22
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("v",22, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // NT$22 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.planeta.getProduccion()==null) { parser.planeta.setProduccion(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$19",64, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo produccion en un campo PLANETAS sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$22",70, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // u ::= naves DOS_PUNTOS ENTERO NT$21 s 
            {
              Object RESULT =null;
              // propagate RESULT from NT$21
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("u",21, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // NT$21 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.planeta.getNaves()==null) { parser.planeta.setNaves(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$18",63, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo naves en un campo PLANETAS sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$21",69, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // t ::= nombre DOS_PUNTOS COMILLAS ID COMILLAS NT$20 s 
            {
              Object RESULT =null;
              // propagate RESULT from NT$20
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("t",20, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-6)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // NT$20 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
 if(parser.planeta.getNombre()==null) { parser.planeta.setNombre(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$17",62, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo nombre en un campo PLANETAS sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$20",68, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // q3 ::= ak 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q3",39, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // q3 ::= aj 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q3",39, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // q3 ::= w 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q3",39, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // q3 ::= v 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q3",39, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // q3 ::= u 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q3",39, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // q3 ::= t 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q3",39, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // s ::= LLAVE_B NT$19 cierre 
            {
              Object RESULT =null;
              // propagate RESULT from NT$19
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("s",19, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // NT$19 ::= 
            {
              Object RESULT =null;
 if(parser.planeta.getPosicionY()!=null && parser.planeta.getProduccion()!=null && parser.planeta.getNaves()!=null && parser.planeta.getPorcentajeMuertes()!=null && parser.planeta.getNombre()!=null ) {   parser.interruptor = parser.verificadorNombresPlanetas(parser.listPlanetas, parser.planeta.getNombre(), parser.interruptor);  if(parser.interruptor == true) { parser.listPlanetas.add(parser.planeta); } else { parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$19",64, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT));  }  } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$17",62, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Falta de uno o mas atributos en un planeta\n";  } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$19",67, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // s ::= LLAVE_B COMA NT$18 r 
            {
              Object RESULT =null;
              // propagate RESULT from NT$18
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("s",19, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // NT$18 ::= 
            {
              Object RESULT =null;
 if(parser.planeta.getPosicionX()!=null && parser.planeta.getProduccion()!=null && parser.planeta.getNaves()!=null && parser.planeta.getPorcentajeMuertes()!=null && parser.planeta.getNombre()!=null ) { parser.interruptor = parser.verificadorNombresPlanetas(parser.listPlanetas, parser.planeta.getNombre(), parser.interruptor);  if(parser.interruptor == true) { parser.listPlanetas.add(parser.planeta); } else { parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$18",63, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); }  } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$17",62, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Falta de uno o mas atributos en un planeta\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$18",66, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // s ::= COMA q3 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("s",19, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // s ::= ak 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("s",19, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // s ::= aj 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("s",19, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // s ::= w 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("s",19, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // s ::= v 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("s",19, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // s ::= u 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("s",19, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // s ::= t 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("s",19, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // r ::= LLAVE_A NT$17 s 
            {
              Object RESULT =null;
              // propagate RESULT from NT$17
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("r",18, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // NT$17 ::= 
            {
              Object RESULT =null;
 parser.planeta = new Planetas(); 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$17",65, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // p ::= PLANETAS DOS_PUNTOS AGRUPACION_A cierre 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("p",16, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // p ::= PLANETAS DOS_PUNTOS AGRUPACION_A NT$16 r 
            {
              Object RESULT =null;
              // propagate RESULT from NT$16
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("p",16, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // NT$16 ::= 
            {
              Object RESULT =null;
 if(parser.listPlanetas==null) { parser.listPlanetas = new ArrayList<>();} else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("p",16, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Campo PLANETAS ya habia sido sentenciado anteriormente\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$16",64, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // q2 ::= jug 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q2",38, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // q2 ::= pn 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q2",38, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // q2 ::= p 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q2",38, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // q2 ::= b 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q2",38, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // k ::= finalizacion DOS_PUNTOS ENTERO NT$15 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$15
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("k",11, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // NT$15 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getFinalizacion()==null) { parser.mapita.setFinalizacion(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$14",59, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo finalizacion sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$15",63, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // o ::= produccion DOS_PUNTOS ENTERO NT$14 l 
            {
              Object RESULT =null;
              // propagate RESULT from NT$14
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("o",15, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // NT$14 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getProduccion()==null) {parser.mapita.setProduccion(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$13",58, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo produccion sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$14",62, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // n ::= mostrarEstadisticas DOS_PUNTOS FALSO NT$13 l 
            {
              Object RESULT =null;
              // propagate RESULT from NT$13
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("n",14, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // NT$13 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getMostrarEstadisticas()==null) { parser.mapita.setMostrarEstadisticas(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$11",56, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo mostrarEstadisticas sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$13",61, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // n ::= mostrarEstadisticas DOS_PUNTOS VERDADERO NT$12 l 
            {
              Object RESULT =null;
              // propagate RESULT from NT$12
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("n",14, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // NT$12 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getMostrarEstadisticas()==null) { parser.mapita.setMostrarEstadisticas(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$11",56, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo mostrarEstadisticas sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$12",60, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // m ::= mostrarNaves DOS_PUNTOS FALSO NT$11 l 
            {
              Object RESULT =null;
              // propagate RESULT from NT$11
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("m",13, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // NT$11 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getMostrarNaves()==null){ parser.mapita.setMostrarNaves(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$9",54, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT));  parser.totalErrores += "Atributo mostrarNaves sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$11",59, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // m ::= mostrarNaves DOS_PUNTOS VERDADERO NT$10 l 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("m",13, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // NT$10 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getMostrarNaves()==null){ parser.mapita.setMostrarNaves(a.toString()); } else { parser.interruptor = false;  parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$9",54, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo mostrarNaves sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$10",58, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // q8 ::= o 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q8",42, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // q8 ::= n 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q8",42, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // q8 ::= m 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q8",42, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // l ::= LLAVE_B c 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("l",12, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // l ::= COMA q8 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("l",12, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // l ::= o 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("l",12, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // l ::= n 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("l",12, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // l ::= m 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("l",12, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // j2 ::= NEUTRALES DOS_PUNTOS LLAVE_A l 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("j2",10, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // i ::= acumular DOS_PUNTOS FALSO NT$9 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$9
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("i",8, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // NT$9 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getAcumular()==null){ parser.mapita.setAcumular(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$7",52, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo acumular sentenciado mas de una vez\n";  } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$9",57, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // i ::= acumular DOS_PUNTOS VERDADERO NT$8 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("i",8, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // NT$8 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getAcumular()==null){ parser.mapita.setAcumular(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$7",52, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo acumular sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$8",56, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // h ::= mapaCiego DOS_PUNTOS FALSO NT$7 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$7
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("h",7, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // NT$7 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getMapaCiego()==null){ parser.mapita.setMapaCiego(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$5",50, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo mapaCiego sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$7",55, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // h ::= mapaCiego DOS_PUNTOS VERDADERO NT$6 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("h",7, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // NT$6 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getMapaCiego()==null){ parser.mapita.setMapaCiego(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$5",50, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo mapaCiego sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$6",54, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // g ::= pNeutrales DOS_PUNTOS ENTERO NT$5 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("g",6, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // NT$5 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getPlanetasNeutrales()==null){ parser.mapita.setPlanetasNeutrales(a.toString());  }else{ parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$4",49, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo planetasNeutrales sentenciado mas de una vez"; }  
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$5",53, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // f ::= alAzar DOS_PUNTOS FALSO NT$4 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("f",5, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // NT$4 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getAlAzar()==null){ parser.mapita.setAlAzar(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$2",47, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT));  parser.totalErrores += "Atributo alAzar sentenciado mas de una vez\n"; } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$4",52, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // f ::= alAzar DOS_PUNTOS VERDADERO NT$3 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("f",5, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // NT$3 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
 if(parser.mapita.getAlAzar()==null){ parser.mapita.setAlAzar(a.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$2",47, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo alAzar sentenciado mas de una vez\n";  } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$3",51, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // j ::= columnas DOS_PUNTOS ENTERO COMA filas DOS_PUNTOS ENTERO 
            {
              Object RESULT =null;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
		 if(parser.mapita.getSize_filas()==null && parser.mapita.getSize_columnas()==null){ parser.mapita.setSize_filas(a.toString()); parser.mapita.setSize_columnas(b.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("j",9, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-6)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo sentenciado mas de una vez\n";  }  
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("j",9, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-6)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // j ::= filas DOS_PUNTOS ENTERO COMA columnas DOS_PUNTOS ENTERO 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.peek()).value;
		 if(parser.mapita.getSize_filas()==null && parser.mapita.getSize_columnas()==null){ parser.mapita.setSize_filas(a.toString()); parser.mapita.setSize_columnas(b.toString()); } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("j",9, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-6)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo sentenciado mas de una vez\n"; }    
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("j",9, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-6)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // e ::= size DOS_PUNTOS LLAVE_A j LLAVE_B c 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("e",4, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-5)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // d ::= id DOS_PUNTOS COMILLAS ID COMILLAS NT$2 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("d",3, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-6)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // NT$2 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
 if(parser.mapita.getId()==null){ parser.mapita.setId(a.toString());  } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("d",3, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-5)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Atributo ID sentenciado mas de una vez dentro de MAPA\n";    } 
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$2",50, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // q ::= k 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q",17, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // q ::= j2 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q",17, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // q ::= i 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q",17, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // q ::= h 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q",17, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // q ::= g 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q",17, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // q ::= f 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q",17, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // q ::= e 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q",17, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // q ::= d 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("q",17, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // c ::= LLAVE_B NT$1 a 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-2)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // NT$1 ::= 
            {
              Object RESULT =null;
 if(parser.mapita.getId() != null && parser.mapita.getSize_filas() != null && parser.mapita.getSize_columnas() != null && parser.mapita.getAlAzar() != null && parser.mapita.getPlanetasNeutrales() != null && parser.mapita.getMapaCiego() != null && parser.mapita.getAcumular() != null && parser.mapita.getMostrarNaves() != null && parser.mapita.getMostrarEstadisticas() != null && parser.mapita.getProduccion() != null) { } else { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("NT$1",46, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT)); parser.totalErrores += "Falta de un atributo en MAPA\n";  }
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$1",49, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // c ::= COMA q 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // c ::= k 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // c ::= j2 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // c ::= i 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // c ::= h 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // c ::= g 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // c ::= f 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // c ::= e 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // c ::= d 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("c",2, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // b ::= MAPA DOS_PUNTOS LLAVE_A NT$0 c 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("b",1, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-4)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // NT$0 ::= 
            {
              Object RESULT =null;
 if(parser.mapita==null){ parser.mapita = new Mapa();    } else {  parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("b",1, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-3)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT));  parser.totalErrores += "MAPA senteciado mas de una vez dentro del archivo\n";  }  
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("NT$0",48, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // a ::= LLAVE_B 
            {
              Object RESULT =null;
		 if(parser.mapita==null || parser.listPlanetas == null || parser.listPlanetasNeutrales == null || parser.listJugadores == null) { parser.interruptor = false; parser.syntax_error(parser.getSymbolFactory().newSymbol("a",0, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT));}  parser.creacionMapa(parser.listJugadores, parser.interruptor, parser.listPlanetas, parser.mapita, parser.panelMensajes, parser.totalErrores);    
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("a",0, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // a ::= COMA q2 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("a",0, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // a ::= LLAVE_A jug 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("a",0, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // a ::= LLAVE_A pn 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("a",0, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // a ::= LLAVE_A p 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("a",0, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // a ::= LLAVE_A b 
            {
              Object RESULT =null;

              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("a",0, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          return CUP$SintaxCreacionMapa$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= a EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)).value;
		RESULT = start_val;
              CUP$SintaxCreacionMapa$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.elementAt(CUP$SintaxCreacionMapa$top-1)), ((java_cup.runtime.Symbol)CUP$SintaxCreacionMapa$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$SintaxCreacionMapa$parser.done_parsing();
          return CUP$SintaxCreacionMapa$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

